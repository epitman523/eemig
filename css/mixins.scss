// Media Queries 
@mixin mq($size) {
    $xs: "(min-width: 1px)";//Phones(portrait)
    $xs-only: "(max-width: 450px)";
    $sm: "(min-width: 451px)";
    $sm-only: "(min-width:451px) and (max-width: 768px)";//Phones(landscape) - Tablet(portrait)
    $md: "(min-width: 769px)";
    $md-only: "(min-width: 769px) and (max-width: 992px)";//Tablet(landscape) - Laptop/Sm Desktop
    $lg: "(min-width: 993px)";
    $lg-only: "(min-width: 993px) and (max-width: 1200px)";//Desktop / LG screens
    $xl: "(min-width: 1201px)";//XL screens
    @if $size == xs {
      @media #{$xs} { @content; }
    }
    @else if $size == xs-only {
        @media #{$xs-only} { @content; }
    }
    @else if $size == sm {
        @media #{$sm} { @content; }
    }
    @else if $size == sm-only {
        @media #{$sm-only} { @content; }
    }
    @else if $size == md {
        @media #{$md} { @content; }
    }
    @else if $size == md-only {
        @media #{$md-only} { @content; }
    }
    @else if $size == lg {
        @media #{$lg} { @content; }
    }
    @else if $size == lg-only {
        @media #{$lg-only} { @content; }
    }
    @else if $size == xl {
        @media #{$xl} { @content; }
    }
}

//Flexbox
@mixin flexbox {
    display: -webkit-box;
    display: -moz-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
}
@mixin flex-wrap($value: nowrap) {
    // No Webkit/FF Box fallback.
    -webkit-flex-wrap: $value;
    @if $value == nowrap {
        -ms-flex-wrap: none;
    } @else {
        -ms-flex-wrap: $value;
    }
    flex-wrap: $value;
}
@mixin flex-direction($value: row) {
  @if $value == row-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: horizontal;
    -moz-box-direction: reverse;
    -moz-box-orient: horizontal;
  } @else if $value == column {
    -webkit-box-direction: normal;
    -webkit-box-orient: vertical;
    -moz-box-direction: normal;
    -moz-box-orient: vertical;
  } @else if $value == column-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: vertical;
    -moz-box-direction: reverse;
    -moz-box-orient: vertical;
  } @else {
    -webkit-box-direction: normal;
    -webkit-box-orient: horizontal;
    -moz-box-direction: normal;
    -moz-box-orient: horizontal;
  }
  -webkit-flex-direction: $value;
  -ms-flex-direction: $value;
  flex-direction: $value;
}
@mixin justify-content($value: flex-start) {
    @if $value == flex-start {
      -webkit-box-pack: start;
      -moz-box-pack: start;
      -ms-flex-pack: start;
    } @else if $value == flex-end {
      -webkit-box-pack: end;
      -moz-box-pack: end;
      -ms-flex-pack: end;
    } @else if $value == space-between {
      -webkit-box-pack: justify;
      -moz-box-pack: justify;
      -ms-flex-pack: justify;
    } @else if $value == space-around {
      -ms-flex-pack: distribute;
    } @else {
      -webkit-box-pack: $value;
      -moz-box-pack: $value;
      -ms-flex-pack: $value;
    }
    -webkit-justify-content: $value;
    justify-content: $value;
  }
  @mixin align-items($value: stretch) {
    @if $value == flex-start {
      -webkit-box-align: start;
      -moz-box-align: start;
      -ms-flex-align: start;
    } @else if $value == flex-end {
      -webkit-box-align: end;
      -moz-box-align: end;
      -ms-flex-align: end;
    } @else {
      -webkit-box-align: $value;
      -moz-box-align: $value;
      -ms-flex-align: $value;
    }
    -webkit-align-items: $value;
    align-items: $value;
  }

  @mixin linear-gradient($top, $bottom){
    background: $bottom;
    background: -webkit-linear-gradient($top, $bottom);
    background: linear-gradient($top, $bottom);
  }

  @mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $color;
    -moz-box-shadow:inset $top $left $blur $color;
    box-shadow:inset $top $left $blur $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}
@mixin rounded($radius: 0.5em) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
}
@mixin white-panel {
    background-color: $white;
    color: $primary;
    position: relative;
    margin-left: -1rem;
    margin-right: -1rem;
    margin-bottom: 6rem;
    @include box-shadow(0, 0, 1rem, $primary);
    
}
@mixin panel-bottom {
    content: ' ';
    display: block;
    margin: 0 auto;
    height: 2rem;
    background: linear-gradient(to left, $accent, rgba(81, 235, 200, 0.2));
    -webkit-box-shadow: inset 0px 10px 5px -10px rgba(45,0,66,0.75);
    -moz-box-shadow: inset 0px 10px 5px -10px rgba(45,0,66,0.75);
    box-shadow: inset 0px 10px 5px -10px rgba(45,0,66,0.75);
    position: absolute;
    bottom: -2rem;
    left: 0;
    right: 0;
}